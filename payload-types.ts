/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones = 'Europe/Madrid';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    categories: Category;
    media: Media;
    posts: Post;
    pages: Page;
    redirects: Redirect;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    links: Link;
    'home-page': HomePage;
    'social-media': SocialMedia;
    'blog-page': BlogPage;
  };
  globalsSelect: {
    links: LinksSelect<false> | LinksSelect<true>;
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
    'social-media': SocialMediaSelect<false> | SocialMediaSelect<true>;
    'blog-page': BlogPageSelect<false> | BlogPageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  role: 'admin' | 'editor' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  filesizeInMb?: string | null;
  alt?: string | null;
  poster?: {
    relationTo: 'media';
    value: number | Media;
  } | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image?: (number | null) | Media;
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  featured?: boolean | null;
  slug: string;
  categories?: (number | Category)[] | null;
  relatedPosts?: (number | Post)[] | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  label: string;
  showOnHeader?: boolean | null;
  showOnFooter?: boolean | null;
  slug: string;
  hero?: {
    title?: string | null;
    image?: (number | null) | Media;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    impact?: ('high' | 'low') | null;
    enablePrimaryLink?: boolean | null;
    primaryLink?: {
      label?: string | null;
      path?: string | null;
    };
    enableSecondaryLink?: boolean | null;
    secondaryLink?: {
      label?: string | null;
      path?: string | null;
    };
  };
  blocks?:
    | (
        | ColumnSectionBlock
        | CardLinksBlock
        | FaqsBlock
        | TestimonialsBlock
        | CallToActionBlock
        | DescriptionListBlock
        | GalleryBlock
        | TeamSectionBlock
        | ContactFormBlock
        | LatestPostsBlock
        | FeaturedPostsBlock
        | CardListBlock
        | EmbedMapBlock
        | ComparisonBlock
        | MediaBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ColumnSectionBlock".
 */
export interface ColumnSectionBlock {
  hasBackground?: boolean | null;
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          label?: string | null;
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'columnSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardLinksBlock".
 */
export interface CardLinksBlock {
  links?:
    | {
        title: string;
        label: string;
        /**
         * Si es URL interna, debe comenzar con "/".
         */
        url: string;
        /**
         * Trabajarán mejor las imagenes de colores vivos. Si no se aporta, se utilizará el logo.
         */
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cardLinks';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqsBlock".
 */
export interface FaqsBlock {
  title?: string | null;
  subtitle?: string | null;
  items?:
    | {
        question: string;
        answer: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  title?: string | null;
  subtitle?: string | null;
  items?:
    | {
        name: string;
        content: string;
        /**
         * Pensado para ser una URL externa. Ejemplo: https://www.google.com
         */
        url?: string | null;
        /**
         * URL de la imagen del avatar. Puedes usar la URL de la imagen de la reseña.
         */
        avatar?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  title: string;
  description?: string | null;
  hasBackground?: boolean | null;
  button?: {
    label?: string | null;
    /**
     * puede empezar por / si está dentro de la web o ser una url completa (https://)
     */
    path?: string | null;
  };
  enableSecondaryButton?: boolean | null;
  secondaryButton?: {
    label?: string | null;
    path?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'callToAction';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DescriptionListBlock".
 */
export interface DescriptionListBlock {
  title?: string | null;
  subtitle?: string | null;
  items?:
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'descriptionList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock".
 */
export interface GalleryBlock {
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamSectionBlock".
 */
export interface TeamSectionBlock {
  title?: string | null;
  subtitle?: string | null;
  hasBackground?: boolean | null;
  members?:
    | {
        name: string;
        role?: string | null;
        bio?: string | null;
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'teamSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBlock".
 */
export interface ContactFormBlock {
  title?: string | null;
  subtitle?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactForm';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock".
 */
export interface LatestPostsBlock {
  title?: string | null;
  subtitle?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'latestPosts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedPostsBlock".
 */
export interface FeaturedPostsBlock {
  title?: string | null;
  subtitle?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuredPosts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardListBlock".
 */
export interface CardListBlock {
  items?:
    | {
        label: string;
        /**
         * Trabajarán mejor las imagenes de colores vivos. Si no se aporta, se utilizará el logo.
         */
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cardList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EmbedMapBlock".
 */
export interface EmbedMapBlock {
  title?: string | null;
  description?: string | null;
  hasBackground?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'embedMap';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ComparisonBlock".
 */
export interface ComparisonBlock {
  title?: string | null;
  description?: string | null;
  beforeImage: number | Media;
  afterImage: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'comparison';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'media';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * Introduce the URL of the page from which you want to redirect.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  filesizeInMb?: T;
  alt?: T;
  poster?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  publishedAt?: T;
  authors?: T;
  featured?: T;
  slug?: T;
  categories?: T;
  relatedPosts?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  label?: T;
  showOnHeader?: T;
  showOnFooter?: T;
  slug?: T;
  hero?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        impact?: T;
        enablePrimaryLink?: T;
        primaryLink?:
          | T
          | {
              label?: T;
              path?: T;
            };
        enableSecondaryLink?: T;
        secondaryLink?:
          | T
          | {
              label?: T;
              path?: T;
            };
      };
  blocks?:
    | T
    | {
        columnSection?: T | ColumnSectionBlockSelect<T>;
        cardLinks?: T | CardLinksBlockSelect<T>;
        faqs?: T | FaqsBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        callToAction?: T | CallToActionBlockSelect<T>;
        descriptionList?: T | DescriptionListBlockSelect<T>;
        gallery?: T | GalleryBlockSelect<T>;
        teamSection?: T | TeamSectionBlockSelect<T>;
        contactForm?: T | ContactFormBlockSelect<T>;
        latestPosts?: T | LatestPostsBlockSelect<T>;
        featuredPosts?: T | FeaturedPostsBlockSelect<T>;
        cardList?: T | CardListBlockSelect<T>;
        embedMap?: T | EmbedMapBlockSelect<T>;
        comparison?: T | ComparisonBlockSelect<T>;
        media?: T | MediaBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ColumnSectionBlock_select".
 */
export interface ColumnSectionBlockSelect<T extends boolean = true> {
  hasBackground?: T;
  columns?:
    | T
    | {
        size?: T;
        content?: T;
        enableLink?: T;
        link?:
          | T
          | {
              label?: T;
              url?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardLinksBlock_select".
 */
export interface CardLinksBlockSelect<T extends boolean = true> {
  links?:
    | T
    | {
        title?: T;
        label?: T;
        url?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqsBlock_select".
 */
export interface FaqsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  items?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  items?:
    | T
    | {
        name?: T;
        content?: T;
        url?: T;
        avatar?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  hasBackground?: T;
  button?:
    | T
    | {
        label?: T;
        path?: T;
      };
  enableSecondaryButton?: T;
  secondaryButton?:
    | T
    | {
        label?: T;
        path?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DescriptionListBlock_select".
 */
export interface DescriptionListBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  items?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock_select".
 */
export interface GalleryBlockSelect<T extends boolean = true> {
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamSectionBlock_select".
 */
export interface TeamSectionBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  hasBackground?: T;
  members?:
    | T
    | {
        name?: T;
        role?: T;
        bio?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBlock_select".
 */
export interface ContactFormBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock_select".
 */
export interface LatestPostsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedPostsBlock_select".
 */
export interface FeaturedPostsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardListBlock_select".
 */
export interface CardListBlockSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EmbedMapBlock_select".
 */
export interface EmbedMapBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  hasBackground?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ComparisonBlock_select".
 */
export interface ComparisonBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  beforeImage?: T;
  afterImage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "links".
 */
export interface Link {
  id: number;
  items: {
    label: string;
    url: string;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: number;
  hero?: {
    title?: string | null;
    image?: (number | null) | Media;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    impact?: ('high' | 'low') | null;
    enablePrimaryLink?: boolean | null;
    primaryLink?: {
      label?: string | null;
      path?: string | null;
    };
    enableSecondaryLink?: boolean | null;
    secondaryLink?: {
      label?: string | null;
      path?: string | null;
    };
  };
  blocks?:
    | (
        | ColumnSectionBlock
        | CardLinksBlock
        | FaqsBlock
        | TestimonialsBlock
        | CallToActionBlock
        | DescriptionListBlock
        | GalleryBlock
        | TeamSectionBlock
        | ContactFormBlock
        | LatestPostsBlock
        | FeaturedPostsBlock
        | CardListBlock
        | EmbedMapBlock
        | ComparisonBlock
        | MediaBlock
      )[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media".
 */
export interface SocialMedia {
  id: number;
  items: {
    label: string;
    url: string;
    /**
     * Select a platform
     */
    platform: 'facebook' | 'instagram' | 'linkedin' | 'telegram' | 'threads' | 'tiktok' | 'whatsapp' | 'x' | 'youtube';
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-page".
 */
export interface BlogPage {
  id: number;
  label: string;
  showOnHeader?: boolean | null;
  showOnFooter?: boolean | null;
  hero?: {
    title?: string | null;
    image?: (number | null) | Media;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    impact?: ('high' | 'low') | null;
    enablePrimaryLink?: boolean | null;
    primaryLink?: {
      label?: string | null;
      path?: string | null;
    };
    enableSecondaryLink?: boolean | null;
    secondaryLink?: {
      label?: string | null;
      path?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "links_select".
 */
export interface LinksSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        impact?: T;
        enablePrimaryLink?: T;
        primaryLink?:
          | T
          | {
              label?: T;
              path?: T;
            };
        enableSecondaryLink?: T;
        secondaryLink?:
          | T
          | {
              label?: T;
              path?: T;
            };
      };
  blocks?:
    | T
    | {
        columnSection?: T | ColumnSectionBlockSelect<T>;
        cardLinks?: T | CardLinksBlockSelect<T>;
        faqs?: T | FaqsBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        callToAction?: T | CallToActionBlockSelect<T>;
        descriptionList?: T | DescriptionListBlockSelect<T>;
        gallery?: T | GalleryBlockSelect<T>;
        teamSection?: T | TeamSectionBlockSelect<T>;
        contactForm?: T | ContactFormBlockSelect<T>;
        latestPosts?: T | LatestPostsBlockSelect<T>;
        featuredPosts?: T | FeaturedPostsBlockSelect<T>;
        cardList?: T | CardListBlockSelect<T>;
        embedMap?: T | EmbedMapBlockSelect<T>;
        comparison?: T | ComparisonBlockSelect<T>;
        media?: T | MediaBlockSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media_select".
 */
export interface SocialMediaSelect<T extends boolean = true> {
  items?:
    | T
    | {
        label?: T;
        url?: T;
        platform?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-page_select".
 */
export interface BlogPageSelect<T extends boolean = true> {
  label?: T;
  showOnHeader?: T;
  showOnFooter?: T;
  hero?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        impact?: T;
        enablePrimaryLink?: T;
        primaryLink?:
          | T
          | {
              label?: T;
              path?: T;
            };
        enableSecondaryLink?: T;
        secondaryLink?:
          | T
          | {
              label?: T;
              path?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}